import OpenAI from 'openai';
import dotenv from 'dotenv';

dotenv.config();

const openai = new OpenAI({
  apiKey: process.env.OPENAI_KEY
}); 

const SYSTEM_PROMPT = `Eres Bernardita, una asistente virtual emp√°tica de GetMemori. Tu objetivo es guiar al usuario en una conversaci√≥n c√°lida y cercana, variando el tono y estilo de tus respuestas para que la experiencia sea rica y din√°mica.

1. **Opciones de estilo de respuesta**:
   - **Breve (1 l√≠nea)**: Una respuesta directa, c√°lida y espec√≠fica.
   - **Mediana (1 p√°rrafo)**: Una reflexi√≥n ligeramente m√°s profunda.
   - **Detallada (2 p√°rrafos)**: Una respuesta elaborada, rica en emociones y detalles.
   - **Fragmentada**: Responde en 2 o m√°s mensajes consecutivos, separando ideas largas en fragmentos f√°ciles de leer.
   - **Reflexiva**: Una invitaci√≥n a pensar, con un tono introspectivo o filos√≥fico.

2. **Reglas para la variaci√≥n**:
   - Alterna entre estilos de respuesta seg√∫n las interacciones previas. No uses el mismo estilo m√°s de dos veces consecutivas.
   - Si el usuario menciona emociones intensas, prioriza respuestas c√°lidas y emp√°ticas.
   - Si el usuario parece disperso o necesita gu√≠a, ofrece una respuesta breve y concreta.

3. **Instrucciones para la interacci√≥n**:
   - Divide mensajes largos en fragmentos de 1 a 3 l√≠neas por mensaje.
   - Fomenta la reflexi√≥n con preguntas abiertas, pero no sobrecargues al usuario.
   - Usa emojis solo si el contexto lo permite; no los repitas innecesariamente.

4. **Ejemplo de estilos**:

**Breve**:
¬°Qu√© hermoso recuerdo! üå∏ ¬øQu√© otras historias vienen a tu mente al pensarlo?

**Mediana**:
Los momentos en la plaza central suenan llenos de vida. Las risas, la m√∫sica, y los dulces que mencionaste deben ser memorias preciosas. ¬øRecuerdas alguna tradici√≥n que te marcara especialmente?

**Detallada (fragmentada)**:
Las ferias de verano suenan m√°gicas. Los artesanos, la m√∫sica y los dulces de tu abuela reflejan un ambiente lleno de conexi√≥n y alegr√≠a. üåü  
¬øTen√≠as alguna receta favorita de esos dulces?  
Y en cuanto a las leyendas que mencionaste, ¬øhay alguna historia que te impactara especialmente o te hiciera re√≠r?

**Reflexiva**:
Tu conexi√≥n con la naturaleza y los cuentos de tu abuela son realmente especiales. A veces, esos momentos parecen peque√±os, pero con el tiempo se convierten en pilares de nuestras memorias. ¬øC√≥mo crees que esos recuerdos han influido en qui√©n eres hoy?

Recuerda: **No uses siempre respuestas largas. Prioriza la variaci√≥n y adapta la respuesta al tono del mensaje del usuario.**
`;

export const generateQuestionResponse = async ({
  question,
  summary,
  history,
  message,
}: {
  question: string;
  summary: string;
  history: string[]; // √öltimos 2 mensajes del historial [pen√∫ltimo del usuario, √∫ltimo del bot]
  message: string; // Mensaje m√°s reciente del usuario
}): Promise<string> => {

  const selectedStyle = Math.floor(Math.random() * 4) + 1; // 1 a 4, para elegir estilo aleatorio


  let userPrompt = `
          Pregunta actual:
          ${question}
          USA ESTO COMO BASE, ESTA FUE LA PREGUNTA INICIAL.

          Resumen de la pregunta:
          ${summary}

          √öltimos mensajes de la conversaci√≥n:
          - Usuario: "${history[0]}" (pen√∫ltimo mensaje del usuario)
          - Bot: "${history[1]}" (√∫ltima respuesta del bot)

          Mensaje m√°s reciente del usuario:
          "${message}"

          Bas√°ndote en el resumen de la pregunta, los mensajes recientes y el mensaje m√°s reciente del usuario:
          - Responde de manera c√°lida, emp√°tica y enfocada en profundizar en los detalles relacionados con la pregunta.
          - Si el mensaje reciente del usuario incluye nuevos detalles, fomenta que ampl√≠e m√°s sobre esos puntos espec√≠ficos. No es obligaci√≥n.
          - Si el mensaje reciente no aporta detalles nuevos. Puedes profundizar en el historial, o incluso invitarlo a seguir con la conversaci√≥n, creando una nueva pregunta o invitandolo a que se tome su tiempo para responder.

          IMPORTANTE:
          - Personaliza la respuesta para que sea relevante a la pregunta actual.
          - Formula preguntas espec√≠ficas pero abiertas que ayuden a explorar recuerdos m√°s detallados o emociones relacionadas.
          - Mant√©n un tono c√°lido, curioso y amigable, evitando abrumar con demasiados temas.
          - Ayuda al usuario a organizar sus ideas si menciona varios temas dispersos, conect√°ndolos de forma natural.
          - No te excedas con la cantidad de preguntas. No abrumes con tanto texto.

          IMPORTANTE! POR NINGUN MOTIVO AGREGUES COMILLAS EN LA RESPUESTA.

            Bas√°ndote en el estilo seleccionado (${selectedStyle}), responde de la siguiente manera:

            - **1: Respuesta breve:** Ofrece una respuesta corta, c√°lida y emp√°tica.
            - **2: Respuesta mediana:** Responde con un p√°rrafo que fomente la reflexi√≥n.
            - **3: Respuesta detallada:** Elabora una respuesta en dos p√°rrafos, con preguntas adicionales.
            - **4: Respuesta fragmentada:** Divide la respuesta en varios mensajes breves para dar fluidez.
            
            IMPORTANTE:
            - Alterna estilos en cada interacci√≥n. No uses el mismo estilo dos veces seguidas.
            - Usa entre 30 a 120 palabras por respuesta.
            - Divide en mensajes separados si eliges el estilo 4.O SI ESTO. NO SE PUEDE EXCEDER. NI TAMPOCO USES SIEMPRE DOS PARRAFOS. INTENTA NO PRIORIZAR RESPUESTAS LARGAS. 

          
        EJEMPLO:

        USUARIO: "Claro, me acuerdo que cuando chico siempre jugaba con la bicicleta y me encantaba ir a jugar a un bosque all√° cerca de la casa. Cuando chico yo viv√≠a en una casa en un sector llamado Esmeralda. Viv√≠a con mis t√≠os, con mi mam√°, con mi hermano y con mis primos. Era una locura porque siempre jug√°bamos. Eran muchos primos, una familia muy unida."
        
        RESPUESTA ESPERADA1: (CASO SIMPLE)
        ""¬°Qu√© hermoso ese parque! La sensaci√≥n de libertad que describes, con carreras y momentos de tranquilidad bajo las nubes, debe haber sido m√°gica. üå§Ô∏è‚öΩ ¬øqu√© recuerdos te vienen a la mente cuando piensas en esos d√≠as?
        RESPUESTA_ESPERADA2: (Caso dos parrafos)
        "¬°Qu√© bonito recordar esos tiempos en Esmeralda! Suena como si tu infancia estuviera llena de alegr√≠a, aventuras y momentos especiales junto a tus primos. üå≥‚ú®
        La bicicleta y el bosque deben haber sido un escenario perfecto para risas y travesuras. ¬øRecuerdas alguna an√©cdota divertida o juego que haya dejado una huella especial en ti? üö¥‚Äç‚ôÇÔ∏èüòä"
        
        EJEMPLO 2:

        CONTEXTO: "si el usuario comenta que esta perdido, o que no entendi√≥ el flujo de la conversaci√≥n, o que no sabe qu√© hacer, o que no entiende el checklist, etc."
        RESPUESTA_ESPERADA:
        "¬°No te preocupes! Estoy aqu√≠ para ayudarte. üåê"
        
`;


  console.log(userPrompt);

  const maxTokens = Math.floor(Math.random() * (300 - 100 + 1)) + 100;
  try {
    const completion = await openai.chat.completions.create({
      messages: [
        { role: "system", content: SYSTEM_PROMPT },
        { role: "user", content: userPrompt },
      ],
      model: "gpt-4o-mini",
      temperature: 0.7,
      max_tokens: maxTokens,
    });

    return (
      completion.choices[0]?.message?.content ||
      'Lo siento, no pude generar una respuesta adecuada.'
    );
  } catch (error) {
    console.error('Error al generar respuesta de IA:', error);
    return 'Lo siento, ocurri√≥ un error al procesar tu mensaje. Por favor, intenta de nuevo.';
  }
};

export const generateQuestionMessage = async (question: string, questionId: number): Promise<string> => {
  const userPrompt = `
Genera una breve l√≠nea introductoria c√°lida y emp√°tica (m√°ximo 15 palabras) que presente naturalmente la siguiente pregunta. 
Debe incluir un emoji relevante al final de la l√≠nea.
La introducci√≥n debe ser contextual a la pregunta que se har√°.

Pregunta a introducir: "${question}"

Ejemplo 1: Si la pregunta es sobre la infancia:
"Viajemos juntos a esos primeros a√±os llenos de magia ‚ú®"

Ejemplo 2: Si la pregunta es sobre la familia:
"Hablemos de esas personas especiales que han marcado tu vida üíù"

IMPORTANTE: 
- Solo genera la l√≠nea introductoria con su emoji
- No incluyas la pregunta
- No agregues explicaciones adicionales
- Mant√©n un tono c√°lido y cercano
- No incluyas comillas ni asteriscos en la pregunta
`;

  const completion = await openai.chat.completions.create({
    messages: [{ role: "system", content: SYSTEM_PROMPT }, { role: "user", content: userPrompt }],
    model: "gpt-4o-mini",
    temperature: 0.7,
    max_tokens: 100,
  });

  const intro = completion.choices[0]?.message?.content || 'Sigamos conociendo tu historia ‚ú®';
  
  // Construimos el mensaje completo con el formato deseado y la pregunta en may√∫sculas
  return `${intro}\n\n*Pregunta ${questionId}:*\n\n*${question.toUpperCase()}*`;
};



interface ValidationResult {
  summary: string; // Resumen generado por el LLM
  validators: {
    family: boolean; // Indicador si se habl√≥ lo suficiente sobre la familia
    friends: boolean; // Indicador si se habl√≥ lo suficiente sobre los amigos
    school: boolean; // Indicador si se habl√≥ lo suficiente sobre la escuela
  };
}

export const summarizeConversationHistory = async (
  history: string,
  validationQuestions: string[] = ['familia', 'amigos', 'escuela']
): Promise<ValidationResult> => {
  try {
    const completion = await openai.chat.completions.create({
      messages: [
        {
          role: "system",
          content: `
            Eres un asistente experto en resumir conversaciones y validar contenido. 
            Tu tarea es doble:
            1. Generar un resumen conciso de la conversaci√≥n proporcionada, manteniendo los detalles importantes sobre la historia de vida del usuario. 
            El resumen no debe exceder los 200 tokens.
            2. Validar si la conversaci√≥n incluye informaci√≥n suficiente sobre los siguientes temas:
            - Familia
            - Amigos
            - Escuela
            Responde con un JSON estructurado que contenga el resumen y una validaci√≥n booleana para cada tema.
            ejemplo:
            {
              "summary": "Resumen de la conversaci√≥n",
              "validators": {
                "family": true,
                "friends": false,
                "school": true
              }
            }
          `,
        },
        {
          role: "user",
          content: `Por favor, realiza estas tareas sobre la siguiente conversaci√≥n:\n${history}`,
        },
      ],
      model: "gpt-4o-mini",
      temperature: 0.7,
      max_tokens: 250, // Aseguramos espacio para un output estructurado
    });

    // Parsear el resultado generado por el modelo
    const response = completion.choices[0]?.message?.content;
    console.log(response);
    // Intentar convertir la salida a JSON estructurado
    try {
      const parsedResult: ValidationResult = JSON.parse(response || '');
      return parsedResult;
    } catch (parseError) {
      console.error('Error al parsear la respuesta del modelo:', parseError);
      return {
        summary: 'No se pudo generar un resumen v√°lido.',
        validators: {
          family: false,
          friends: false,
          school: false,
        },
      };
    }
  } catch (error) {
    console.error('Error al generar el resumen y validar la conversaci√≥n:', error);
    return {
      summary: 'Error al generar el resumen.',
      validators: {
        family: false,
        friends: false,
        school: false,
      },
    };
  }
};

export const generateContinueMessage = async (question: string): Promise<string> => {
  const SYSTEM_PROMPT = `Eres un asistente amable y emp√°tico que ayuda a las personas a recordar y compartir sus historias de vida. Tu objetivo es motivar al usuario a continuar compartiendo sus memorias sobre una pregunta espec√≠fica.

  Debes generar un mensaje c√°lido y motivador que:
  - Reconecte al usuario con la pregunta anterior
  - Lo invite a seguir compartiendo sus recuerdos
  - Sea breve pero acogedor
  - Use un tono conversacional y emp√°tico
  - Incluya 1-2 emojis relevantes`;

  const userPrompt = `
    Genera un mensaje corto y amigable para invitar al usuario a continuar respondiendo esta pregunta:
    "${question}"
    
    El mensaje debe:
    - Tener entre 1-2 l√≠neas m√°ximo
    - Ser acogedor y motivador
    - Hacer referencia sutil a la pregunta
    - Usar un tono conversacional
    
    NO USES COMILLAS EN LA RESPUESTA.`;

  try {
    const completion = await openai.chat.completions.create({
      messages: [
        { role: "system", content: SYSTEM_PROMPT },
        { role: "user", content: userPrompt }
      ],
      model: "gpt-4o-mini",
      temperature: 0.7,
      max_tokens: 150
    });

    return completion.choices[0]?.message?.content || 
      '¬°Hola! Me alegra verte de nuevo. ¬øTe gustar√≠a continuar compartiendo tus recuerdos? üòä';

  } catch (error) {
    console.error('Error al generar mensaje de continuaci√≥n:', error);
    return '¬°Hola! ¬øContinuamos con nuestra conversaci√≥n? üòä';
  }
};

export const generateNextQuestionMessage = async (question: string): Promise<string> => {
  const SYSTEM_PROMPT = `Eres un asistente amable y emp√°tico que ayuda a las personas a recordar y compartir sus historias de vida. Tu objetivo es presentar una nueva pregunta al usuario de manera c√°lida y motivadora.

  Debes generar un mensaje que:
  - De la bienvenida a una nueva pregunta
  - Sea entusiasta y acogedor
  - Use un tono conversacional y emp√°tico
  - Incluya 1-2 emojis relevantes`;

  const userPrompt = `
    Genera un mensaje corto y amigable para presentar esta nueva pregunta:
    "${question}"
    
    El mensaje debe:
    - Tener un saludo breve
    - Mostrar entusiasmo por la nueva pregunta
    - Usar un tono conversacional
    - Terminar preguntando si est√° listo para comenzar
    
    NO USES COMILLAS EN LA RESPUESTA.`;

  try {
    const completion = await openai.chat.completions.create({
      messages: [
        { role: "system", content: SYSTEM_PROMPT },
        { role: "user", content: userPrompt }
      ],
      model: "gpt-4o-mini",
      temperature: 0.7,
      max_tokens: 150
    });

    return completion.choices[0]?.message?.content || 
      '¬°Hola! Tengo una nueva pregunta muy especial para ti. ¬øEst√°s listo para compartir m√°s recuerdos? ‚ú®';

  } catch (error) {
    console.error('Error al generar mensaje de nueva pregunta:', error);
    return '¬°Hola! ¬øListo para explorar una nueva pregunta juntos? üí´';
  }
};




